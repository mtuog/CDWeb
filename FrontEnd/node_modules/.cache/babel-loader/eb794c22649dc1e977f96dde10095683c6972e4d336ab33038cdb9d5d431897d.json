{"ast":null,"code":"const API_URL = 'http://localhost:8080/api/auth';\n\n// Hàm đăng nhập\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Đăng nhập thất bại');\n    }\n    const data = await response.json();\n\n    // Lưu thông tin user và token vào localStorage\n    localStorage.setItem('user', JSON.stringify(data));\n    localStorage.setItem('token', data.token);\n    return data;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\n// Hàm đăng ký\nexport const register = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Đăng ký thất bại');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error during registration:', error);\n    throw error;\n  }\n};\n\n// Hàm đăng xuất\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('token');\n};\n\n// Hàm kiểm tra user đã đăng nhập hay chưa\nexport const isAuthenticated = () => {\n  const user = localStorage.getItem('user');\n  const token = localStorage.getItem('token');\n  return !!user && !!token;\n};\n\n// Hàm lấy thông tin user hiện tại\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// Hàm lấy token\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};","map":{"version":3,"names":["API_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","localStorage","setItem","token","error","console","register","userData","logout","removeItem","isAuthenticated","user","getItem","getCurrentUser","parse","getToken"],"sources":["E:/GitHub/CDWeb/FrontEnd/src/api/authApi.js"],"sourcesContent":["const API_URL = 'http://localhost:8080/api/auth';\r\n\r\n// Hàm đăng nhập\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Đăng nhập thất bại');\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Lưu thông tin user và token vào localStorage\r\n    localStorage.setItem('user', JSON.stringify(data));\r\n    localStorage.setItem('token', data.token);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error during login:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm đăng ký\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Đăng ký thất bại');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error during registration:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm đăng xuất\r\nexport const logout = () => {\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('token');\r\n};\r\n\r\n// Hàm kiểm tra user đã đăng nhập hay chưa\r\nexport const isAuthenticated = () => {\r\n  const user = localStorage.getItem('user');\r\n  const token = localStorage.getItem('token');\r\n  return !!user && !!token;\r\n};\r\n\r\n// Hàm lấy thông tin user hiện tại\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// Hàm lấy token\r\nexport const getToken = () => {\r\n  return localStorage.getItem('token');\r\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAG,gCAAgC;;AAEhD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAC/CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;IAElC;IACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;IAClDE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;IAEzC,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,WAAW,EAAE;MAClDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACjB,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACrC;IAEA,OAAO,MAAMR,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAC1BP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EAC/BR,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,IAAI,GAAGV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMT,KAAK,GAAGF,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,CAAC,CAACD,IAAI,IAAI,CAAC,CAACR,KAAK;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMU,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMF,IAAI,GAAGV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOD,IAAI,GAAGhB,IAAI,CAACmB,KAAK,CAACH,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOd,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}